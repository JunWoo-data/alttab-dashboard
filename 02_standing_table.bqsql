create or replace table `alttab-348505.alttab_22w.standing_table` as 

with _standing_table as (
  select
    player_name,
    match_date,
    rank() over(order by match_date DESC) as match_date_order,
    rank_point_delta,
    rank_point,
    rank,
    LAG(rank) OVER (PARTITION BY player_name  
  		              ORDER BY match_date) - rank as rank_delta,
    sum(number_of_win) over (partition by player_name 
                             order by match_date 
                             ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as number_of_win,
    sum(number_of_draw) over (partition by player_name 
                              order by match_date
                              ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as number_of_draw,
    sum(number_of_lose) over (partition by player_name 
                              order by match_date
                              ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as number_of_lose,
    sum(first_gain) over (partition by player_name 
                          order by match_date
                          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) +
    sum(second_gain) over (partition by player_name 
                           order by match_date
                           ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) +
    sum(third_gain) over (partition by player_name 
                          order by match_date
                          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as number_of_gain,  
    sum(first_loss) over (partition by player_name 
                          order by match_date
                          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) +
    sum(second_loss) over (partition by player_name 
                           order by match_date
                           ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) +
    sum(third_loss) over (partition by player_name 
                          order by match_date
                          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as number_of_loss,

    case 
      when third_gain - third_loss > 0 then 1
      when third_gain - third_loss = 0 then 0
      when third_gain - third_loss < 0 then -1
      else null end as recent_1_result, 

    case 
      when second_gain - second_loss > 0 then 1
      when second_gain - second_loss = 0 then 0
      when second_gain - second_loss < 0 then -1
      else null end as recent_2_result,

    case 
      when first_gain - first_loss > 0 then 1
      when first_gain - first_loss = 0 then 0
      when first_gain - first_loss < 0 then -1
      else null end as recent_3_result,

    case 
      when lag(third_gain, 1) over (partition by player_name order by match_date) - lag(third_loss, 1) over (partition by player_name order by match_date) > 0 then 1
      when lag(third_gain, 1) over (partition by player_name order by match_date) - lag(third_loss, 1) over (partition by player_name order by match_date) = 0 then 0
      when lag(third_gain, 1) over (partition by player_name order by match_date) - lag(third_loss, 1) over (partition by player_name order by match_date) < 0 then -1
      else null end as recent_4_result, 

    case 
      when lag(second_gain, 1) over (partition by player_name order by match_date) - lag(second_loss, 1) over (partition by player_name order by match_date) > 0 then 1
      when lag(second_gain, 1) over (partition by player_name order by match_date) - lag(second_loss, 1) over (partition by player_name order by match_date) = 0 then 0
      when lag(second_gain, 1) over (partition by player_name order by match_date) - lag(second_loss, 1) over (partition by player_name order by match_date) < 0 then -1
      else null end as recent_5_result, 

    case 
      when lag(first_gain, 1) over (partition by player_name order by match_date) - lag(first_loss, 1) over (partition by player_name order by match_date) > 0 then 1
      when lag(first_gain, 1) over (partition by player_name order by match_date) - lag(first_loss, 1) over (partition by player_name order by match_date) = 0 then 0
      when lag(first_gain, 1) over (partition by player_name order by match_date) - lag(first_loss, 1) over (partition by player_name order by match_date) < 0 then -1
      else null end as recent_6_result,  


    case 
      when lag(third_gain, 2) over (partition by player_name order by match_date) - lag(third_loss, 2) over (partition by player_name order by match_date) > 0 then 1
      when lag(third_gain, 2) over (partition by player_name order by match_date) - lag(third_loss, 2) over (partition by player_name order by match_date) = 0 then 0
      when lag(third_gain, 2) over (partition by player_name order by match_date) - lag(third_loss, 2) over (partition by player_name order by match_date) < 0 then -1
      else null end as recent_7_result, 

    case 
      when lag(second_gain, 2) over (partition by player_name order by match_date) - lag(second_loss, 2) over (partition by player_name order by match_date) > 0 then 1
      when lag(second_gain, 2) over (partition by player_name order by match_date) - lag(second_loss, 2) over (partition by player_name order by match_date) = 0 then 0
      when lag(second_gain, 2) over (partition by player_name order by match_date) - lag(second_loss, 2) over (partition by player_name order by match_date) < 0 then -1
      else null end as recent_8_result, 

    case 
      when lag(first_gain, 2) over (partition by player_name order by match_date) - lag(first_loss, 2) over (partition by player_name order by match_date) > 0 then 1
      when lag(first_gain, 2) over (partition by player_name order by match_date) - lag(first_loss, 2) over (partition by player_name order by match_date) = 0 then 0
      when lag(first_gain, 2) over (partition by player_name order by match_date) - lag(first_loss, 2) over (partition by player_name order by match_date) < 0 then -1
      else null end as recent_9_result                      
  FROM `alttab-348505.alttab_22w.player_rank` 
  left outer join `alttab-348505.alttab_22w.match_result`
  using(player_name, match_date)
)

select
  player_name,
  match_date,
  match_date_order,
  rank_point,
  coalesce(rank_point_delta,0) as rank_point_delta,
  rank,
  rank_delta,
  concat(coalesce(number_of_win, 0), "-", coalesce(number_of_draw, 0), "-", coalesce(number_of_lose, 0)) as win_draw_lose,
  concat(coalesce(number_of_gain, 0), "-", coalesce(number_of_loss, 0)) as gain_loss,
  recent_1_result,
  recent_2_result,
  recent_3_result,
  recent_4_result,
  recent_5_result,
  recent_6_result,
  recent_7_result,
  recent_8_result,
  recent_9_result,
from _standing_table