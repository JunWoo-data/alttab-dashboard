-- create or replace table `alt-tab-348721.{dataset_id}.{table_name}` 
-- partition by match_date
-- as 

with
_rank_related_columns as (
  select
    player_name,
    match_date,
    rank() over(order by match_date DESC) as match_date_order,
    rank_point_delta,
    rank_point,
    rank,
    LAG(rank) OVER (PARTITION BY player_name  
    		              ORDER BY match_date) - rank as rank_delta
  FROM `alt-tab-348721.{dataset_id}.player_rank` 
),

_win_lose_gain_loss_related_columns_temp as (
  select
    player_name, match_date, number_of_win, number_of_draw, number_of_lose, 
    sum(number_of_win) over (partition by player_name 
                             order by match_date 
                             ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as number_of_win_cum,
    sum(number_of_draw) over (partition by player_name 
                              order by match_date
                              ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as number_of_draw_cum,
    sum(number_of_lose) over (partition by player_name 
                              order by match_date
                              ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as number_of_lose_cum,
    (sum(number_of_win) over (partition by player_name 
                              order by match_date 
                              ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) +
     sum(number_of_draw) over (partition by player_name 
                               order by match_date
                               ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) +
     sum(number_of_lose) over (partition by player_name 
                               order by match_date
                               ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as number_of_matches_cum, 
    
    number_of_gain, number_of_loss,
    sum(number_of_gain) over (partition by player_name 
                              order by match_date
                              ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as number_of_gain_cum,
    sum(number_of_loss) over (partition by player_name 
                              order by match_date
                              ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) as number_of_loss_cum

  from (
    select
      player_name, match_date,
      sum(case when match_result = 1 then 1 else 0 end) as number_of_win,
      sum(case when match_result = 0 then 1 else 0 end) as number_of_draw,
      sum(case when match_result = -1 then 1 else 0 end) as number_of_lose,
      sum(gain) as number_of_gain,
      sum(loss) as number_of_loss
    FROM `alt-tab-348721.{dataset_id}.player_name_list`
    left outer join `alt-tab-348721.{dataset_id}.match_result_flatten`
    using(player_name)
    group by player_name, match_date
  )
),

_win_lose_gain_loss_related_columns as (
  select
    player_name,
    match_date,
    number_of_win_cum as number_of_win,
    number_of_draw_cum as number_of_draw,
    number_of_lose_cum as number_of_lose,
    case 
      when number_of_matches_cum = 0 then 0
      else  number_of_win_cum / number_of_matches_cum
      end as win_percentage,
    number_of_gain_cum as number_of_gain, 
    number_of_loss_cum as number_of_loss
  from _win_lose_gain_loss_related_columns_temp
),

_distinct_match_date as (
select
  player_name, match_date, match_order 
from `alt-tab-348721.{dataset_id}.player_name_list`
cross join (select distinct match_date from  `alt-tab-348721.{dataset_id}.match_result_flatten`)
cross join (select 1 as match_order union all select 2 union all select 3)
),

_recent_3_week_results as (
  select
    * except(match_result, match_order)
  from (
    select
      _distinct_match_date.*,
      _result.match_result,
      match_result as recent_1_result,
      lag(match_result, 1) over(partition by player_name order by match_date, match_order) as recent_2_result,
      lag(match_result, 2) over(partition by player_name order by match_date, match_order) as recent_3_result,
      lag(match_result, 3) over(partition by player_name order by match_date, match_order) as recent_4_result,
      lag(match_result, 4) over(partition by player_name order by match_date, match_order) as recent_5_result,
      lag(match_result, 5) over(partition by player_name order by match_date, match_order) as recent_6_result,
      lag(match_result, 6) over(partition by player_name order by match_date, match_order) as recent_7_result,
      lag(match_result, 7) over(partition by player_name order by match_date, match_order) as recent_8_result,
      lag(match_result, 8) over(partition by player_name order by match_date, match_order) as recent_9_result,
    from _distinct_match_date
    left outer join `alt-tab-348721.{dataset_id}.match_result_flatten` as _result
    using (player_name, match_date, match_order)
  )
  where match_order = 3
),

_joined as (
  select  
    player_name,
    match_date,
    match_date_order,
    rank_point,
    rank_point_delta,
    rank,
    coalesce(rank_delta, 0) as rank_delta,
    concat(
      coalesce(last_value(number_of_win ignore nulls) over(partition by player_name 
                                                           order by match_date
                                                           ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0),
      "-",
      coalesce(last_value(number_of_draw ignore nulls) over(partition by player_name 
                                                            order by match_date
                                                            ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0),
      "-",
      coalesce(last_value(number_of_lose ignore nulls) over(partition by player_name 
                                                            order by match_date
                                                            ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0)
    ) as win_draw_lose,
    coalesce(win_percentage, last_value(win_percentage ignore nulls) over(partition by player_name 
                                                                          order by match_date
                                                                          ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as win_percentage,
    concat(
      coalesce(last_value(number_of_gain ignore nulls) over(partition by player_name 
                                                            order by match_date
                                                            ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0),
      "-",
      coalesce(last_value(number_of_loss ignore nulls) over(partition by player_name 
                                                            order by match_date
                                                            ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0)
    ) as gain_loss,
    recent_1_result,
    recent_2_result,
    recent_3_result,
    recent_4_result,
    recent_5_result,
    recent_6_result,
    recent_7_result,
    recent_8_result,
    recent_9_result
  from _rank_related_columns
  left outer join _win_lose_gain_loss_related_columns
  using(player_name, match_date)
  left outer join _recent_3_week_results
  using(player_name, match_date)
)

select
  player_name, match_date, match_date_order, rank_point, rank_point_delta, rank, rank_delta, win_draw_lose, 
  coalesce(win_percentage, 0) as win_percentage,
  coalesce(win_percentage - coalesce(lag(win_percentage) over(partition by player_name order by match_date), 0), 0) as win_percentage_delta,
  gain_loss, recent_1_result, recent_2_result, recent_3_result, recent_4_result, recent_5_result, recent_6_result, recent_7_result, recent_8_result, recent_9_result

from _joined